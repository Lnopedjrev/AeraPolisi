services:

  web:
    image: nginx:stable-perl
    ports:
      - "8090:443"
    networks:
      - aerapolisi_network
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certs/ssl/test.local.crt:/etc/ssl/certs/test.local.crt
      - ./certs/ssl/test.local.key:/etc/ssl/private/test.local.key
      - static_volume:/app/aerapolisi/static
    depends_on:
      main_app:
        condition: service_started
      

  main_app:
    build:
      context: .
      dockerfile: dockerfile_app-wdb
    volumes: 
      - static_volume:/app/aerapolisi/static
    secrets:
      - app_env
    environment:
      - ENV_PATH=/run/secrets/app_env
    expose:
      - "8000"
    networks:
      - aerapolisi_network
    command: ["daphne", "-b", "0.0.0.0", "-p", "8000", "aerapolisi.asgi:application"]
    depends_on:
      db:
        condition: service_healthy
      redis_service:
        condition: service_started
      
  redis_service:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/var/lib/redis/data
    command: ["redis-server"]
    networks:
      - aerapolisi_network
  db:
    image: postgres:15.1-alpine
    secrets:
      - db_password
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    volumes:
      - aerapgdb:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - aerapolisi_network
    user: postgres
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 3
networks:
  aerapolisi_network:
volumes:
  aerapgdb:
  redis_data:
  static_volume:
secrets:
  db_password:
    file: ./secrets/db_password.txt
  app_env:
    file: ./.env